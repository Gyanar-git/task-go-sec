template: true
valuesFilePath: ./values.yml

resources:
  - name: task_go_sec
    type: GitRepo
    configuration:
      path: {{ .Values.repoPath }}
      gitProvider: {{ .Values.gitIntegration }}
      branches:
        include: ^{{ .Values.mainBranch }}$
      cloneProtocol: https

pipelines:
  - name: go_sec
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          RESOLVE_REPO: npm-virtual
    steps:
      - name: test_task_go_sec
        type: Bash
        configuration:
          inputResources:
            - name: task_go_sec
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onStart:
            - echo "Install GO"
            - task: jfrog/setup-go@v0.0.2
              input:
                version: "{{ .Values.goVersion }}"
                cacheIntegration: "{{ .Values.artIntegration }}"
                staticCheckVersion: "{{ .Values.staticCheckVersion }}"
            - echo "Done installation of GO"
          onExecute:
            - pushd $res_task_go_sec_resourcePath
            - go version
            # Configure JFrog CLI
            - jfrog npmc --repo-resolve $RESOLVE_REPO
            # Install npm dependencies
            - jfrog npm install
            # Build task runnable script bundled with dependencies
            - npm run dist
            - popd

            # Run task
            - task: $res_task_go_sec_resourcePath
              id: run_go_sec
          onComplete:
            - echo "Step done!"